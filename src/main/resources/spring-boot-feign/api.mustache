{{>licenseInfo}}
package {{package}};

{{#legacyDates}}
import {{invokerPackage}}.ParamExpander;
{{/legacyDates}}

{{#imports}}import {{import}};
{{/imports}}

{{^fullJavaUtil}}
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
{{/fullJavaUtil}}
import feign.*;

import org.springframework.cloud.openfeign.FeignClient;
import org.springframework.web.bind.annotation.*;

@FeignClient(name = "{{feignName}}", url = "{{feignUrl}}")
public interface {{classname}} {

{{#operations}}{{#operation}}
  /**
   * {{summary}}
   * {{notes}}
{{#allParams}}
   * @param {{paramName}} {{description}}{{#required}} (required){{/required}}{{^required}} (optional{{^isContainer}}{{#defaultValue}}, default to {{.}}{{/defaultValue}}{{/isContainer}}){{/required}}
{{/allParams}}
{{#returnType}}
   * @return {{returnType}}
{{/returnType}}
{{#externalDocs}}
  * {{description}}
  * @see <a href="{{url}}">{{summary}} Documentation</a>
{{/externalDocs}}
   */
  //@RequestLine("{{httpMethod}} {{{path}}}{{#hasQueryParams}}?{{/hasQueryParams}}{{#queryParams}}{{baseName}}={{=<% %>=}}{<%paramName%>}<%={{ }}=%>{{#hasMore}}&{{/hasMore}}{{/queryParams}}")
  @RequestMapping(method = RequestMethod.{{httpMethod}}, value = "{{{path}}}")
  @Headers({
{{#vendorExtensions.x-contentType}}    "Content-Type: {{vendorExtensions.x-contentType}}",
{{/vendorExtensions.x-contentType}}    "Accept: {{vendorExtensions.x-accepts}}",{{#headerParams}}
    "{{baseName}}: {{=<% %>=}}{<%paramName%>}<%={{ }}=%>"{{#hasMore}},
    {{/hasMore}}{{/headerParams}}
  })
  {{#returnType}}{{{returnType}}} {{/returnType}}{{^returnType}}void {{/returnType}}{{nickname}}({{#allParams}}{{^isBodyParam}}{{^legacyDates}}@RequestParam("{{paramName}}") {{/legacyDates}}{{#legacyDates}}@RequestParam(value="{{paramName}}", expander=ParamExpander.class) {{/legacyDates}}{{/isBodyParam}}{{{dataType}}} {{paramName}}{{#hasMore}}, {{/hasMore}}{{/allParams}});
  {{/operation}}
{{/operations}}
}
